import cv2
import numpy as np
import onnxruntime as ort
import pickle
import time

# 模型与标签编码器路径
ONNX_MODEL = "food101_model.onnx"
LABEL_ENCODER = "label_encoder.pkl"

# 输入尺寸（训练时的尺寸）
IMG_SIZE = 384

# 1. 加载 ONNX 模型
sess = ort.InferenceSession(ONNX_MODEL, providers=["CPUExecutionProvider"])
input_name = sess.get_inputs()[0].name

# 2. 加载标签编码器
with open(LABEL_ENCODER, "rb") as f:
    label_encoder = pickle.load(f)

# 3. 打开摄像头
cap = cv2.VideoCapture(0)  # 0 通常是默认摄像头
if not cap.isOpened():
    raise RuntimeError("无法打开摄像头")

print("▶️ 开始实时分类，按 'q' 退出")

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # 4. 图像预处理：BGR -> RGB, resize, normalize, NHWC -> NCHW
    img = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    img = cv2.resize(img, (IMG_SIZE, IMG_SIZE))
    img = img.astype(np.float32) / 255.0
    img = np.expand_dims(img, axis=0)           # shape (1, H, W, C)
    #img =np.transpose(img, (0, 3, 1, 2))       # (1, 3, 384, 384)

    # 5. 推理，并取最大概率类别
    t0 = time.time()
    outputs = sess.run(None, {input_name: img})
    probs = outputs[0].squeeze()                # shape (101,)
    idx = int(np.argmax(probs))
    score = float(probs[idx])
    elapsed = (time.time() - t0) * 1000         # 毫秒

    # 6. 解码类别名称
    class_name = label_encoder.inverse_transform([idx])[0]

    # 7. 可视化结果
    text = f"{class_name}: {score*100:.1f}%  ({elapsed:.1f}ms)"
    cv2.putText(frame, text, (10, 30), cv2.FONT_HERSHEY_SIMPLEX,
                1.0, (0, 255, 0), 2)
    cv2.imshow("RealTime Classification", frame)

    # 按 q 键退出
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# 8. 释放资源
cap.release()
cv2.destroyAllWindows()
